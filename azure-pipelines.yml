# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:
- task: TerraformInstaller@0
  inputs:
    terraformVersion: '0.12.3'
    
- task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV1@0
  displayName: 'Terraform : INIT'
  inputs:
    backendServiceArm: 'jonwterraformsp-ARM'
    backendAzureRmResourceGroupName: 'RG-Terraform'
    backendAzureRmStorageAccountName: jonwterraformstorage
    backendAzureRmContainerName: terraformstate
    backendAzureRmKey: 'UcxyiThFntiiF/cqXUruyrNiOApgsNjq2dTaEHk2cghtWot5TceJRoDiIEgzNJuzJYAbK6nO/3n14IJVOaH62Q=='

- task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV1@0
  displayName: 'Terraform : PLAN'
  inputs:
    command: plan
    environmentServiceNameAzureRM: 'jonwterraformsp-ARM'

- task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV1@0
  displayName: 'Terraform : VALIDATE & APPLY'
  inputs:
    command: apply
    environmentServiceNameAzureRM: 'jonwterraformsp-ARM'
