trigger:
- main

pool:
  name: Azure Pipelines
  vmImage: 'vs2017-win2016'

steps:
- task: TerraformInstaller@0
  inputs:
    terraformVersion: '0.12.3'

- task: AzureKeyVault@2
  inputs:
    azureSubscription: 'jonwterraformsp-ARM'
    KeyVaultName: 'jonwterraformkv'
    SecretsFilter: 'jonwterraformstoragekey'
    RunAsPreJob: true

- bash: |
    echo "Secret Found! $MY_MAPPED_ENV_VAR"        
  env:
    MY_MAPPED_ENV_VAR: $(mySecret)

- task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV1@0
  displayName: 'Terraform : INIT'
  inputs:
    command: init
    workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
    backendServiceArm: 'jonwterraformsp-ARM'
    backendAzureRmResourceGroupName: 'RG-Terraform'
    backendAzureRmStorageAccountName: jonwterraformstorage
    backendAzureRmContainerName: terraformstate
    backendAzureRmKey: $(mySecret)
  env:
    mySecret: $(jonwterraformstoragekey)

- task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV1@0
  displayName: 'Terraform : PLAN'
  inputs:
    command: plan
    workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
    environmentServiceNameAzureRM: 'jonwterraformsp-ARM'

- task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV1@0
  displayName: 'Terraform : VALIDATE & APPLY'
  inputs:
    command: apply
    workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
    environmentServiceNameAzureRM: 'jonwterraformsp-ARM'
